@model WebLib.Models.ReaderPages.ChangePasswordModel

@using (Html.BeginForm("ChangePassword", "ReaderPage", null, FormMethod.Post, new { @style = "padding: 0 15em" }))
{
    @Html.HiddenFor(m => m.UserId)
    <div class="control-group col-md-12" , style="min-height: 100px;">
        <!-- Surname -->
        <label class="control-label" for="OldPassword">Старый пароль</label>
        <div class="controls">
            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", @id = "OldPassword", @style = "min-width: 100%" })
            <p class="help-block">@Html.ValidationMessageFor(m => m.OldPassword, null, new { @class = "text-danger" })</p>
        </div>
    </div>

    <div class="control-group col-md-12" , style="min-height: 100px;">
        <!-- Name -->
        <label class="control-label" for="NewPassword">Новый пароль</label>
        <div class="controls">
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @id = "NewPassword", @style = "min-width: 100%" })
            <p class="help-block">@Html.ValidationMessageFor(m => m.NewPassword, null, new { @class = "text-danger" })</p>
        </div>
    </div>
    <div class="control-group col-md-12" , style="min-height: 100px;">
        <!-- Patronymic -->
        <label class="control-label" for="ConfirmPassword">Подтвердите пароль</label>
        <div class="controls">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @id = "ConfirmPassword", @style = "min-width: 100%" })
            <p class="help-block">@Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "text-danger" })</p>
        </div>
    </div>
    <div class="col-md-12" , style="min-height: 100px; margin-top: 10px">
        <button type="submit" class="btn btn-success btn-block btn-lg">Сохранить изменения</button>
    </div>
}
